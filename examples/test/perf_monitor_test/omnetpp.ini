#
# Copyright (C) 2012 Kyeong Soo (Joseph) Kim. All rights reserved.
#
# This ini file provides architecture-specific configurations for an
# abstract model of dedicated access (reference) architectures -- like
# point-to-point or static WDM-PON -- for the comparison study of
# next-generation network (NGN) access architectures.
#
# Note that [General] section, i.e., configurations common to all
# architectures including those of traffic models, is provided by
# "General.ini".
#

[General]
### [General] section providing configurations common to all network
### architectures
include General.ini


########################################################################
### Command environment
########################################################################
#cmdenv-express-mode = true
#cmdenv-performance-display = true	# for monitoring
#cmdenv-status-frequency = 2min	# default is 2s

########################################################################
# Network/system settings
########################################################################

########################################################################
### NIC (of ONUs, OLT)
########################################################################

########################################################################
### Architecture-Specific Settings
########################################################################
[Config Base]
network = inet.examples.test.perf_monitor_test.PerformanceMonitorTest
result-dir = results
*.distribution_rate = ${dr=0.1, 1, 10}Gbps	# rate of distribution fiber
*.backbone_rate = ${br=100}Gbps	# rate of backbone link
**.olt.ethg$o[*].channel.throughput.result-recording-modes = all	# for throughput measurement
**.httpApp[*].*.result-recording-modes = all 
**.host.videoApp[*].numTraceFrames = 53997	# for 'Silence of the labms'
**.host.videoApp[*].gopSize = 16	# for 'Silence of the labms'
**.host.videoApp[*].numBFrames = 3	# for 'Silence of the labms'
**.server.videoSrv[*].traceFile = "../videoTraces/silenceOfTheLambs_verbose"
**.burstMeter.maxIFG = 10	# maximum IFGs allowed between two consecutive Ethernet frames of a same burst

########################################################################
### Without traffic shaping
########################################################################
[Config nh1_nf0_nv0]
extends = Base
result-dir = results/nh1_nf0_nv0
**.host.numFtpApps = 0
**.server.numFtpSrvs = 0
**.host.numVideoApps = 0
**.server.numVideoSrvs = 0

[Config nh1_nf5_nv1]
extends = Base
result-dir = results/nh1_nf5_nv1

[Config nh1_nf0_nv1]
extends = Base
result-dir = results/nh1_nf0_nv1
**.host.numFtpApps = 0
**.server.numFtpSrvs = 0

[Config dr100M_nh1_nf0_nv1]
extends = nh1_nf0_nv1
result-dir = results/dr100M_nh1_nf0_nv1
constraint = ($dr) == 0.1

[Config dr100M_nh1_nf0_nv1-test]
extends = dr100M_nh1_nf0_nv1
sim-time-limit = 30min
warmup-period = 1min
result-dir = results/test/dr100M_nh1_nf0_nv1-test

[Config nh1_nf0_nv0-test]
extends = nh1_nf0_nv0
result-dir = results/test/nh1_nf0_nv0-test

########################################################################
### With traffic shaping
########################################################################
#[Config nh1_nf5_nv1_tbf]
#extends = nh1_nf5_nv1
#result-dir = results/nh1_nf5_nv1_tbf
#### TBF configurations
## tagged ports toward ODN
#**.olt.mac[0].queueType = "DropTailVLANTBFQueue"  # OLT downstream queue
#**.olt.mac[0].queue.numQueues = 1
#**.olt.mac[0].queue.burstSize = ${bs=3044, 7610, 15220, 30440, 76100, 152200}B	# 2, 5, 10, 20, 50, 100 MTUs (taking into account VLAN tag)
#**.olt.mac[0].queue.meanRate = ${mr=5, 10, 20, 50, 100}Mbps
#**.olt.mac[0].queue.mtu = 1522B	# for Ethernet frame with header(18) + VLAN tag (4) + maximum payload (1500)
#**.olt.mac[0].queue.peakRate = ${dr}Gbps
##constraint = (($mr) >= ($n)*2) && (($mr) >= ($dr)*10) && (($mr) <= ($dr)*100)
#constraint = (($mr) >= ($n)*2) && (($mr) >= ($dr)*10) && (($mr) <= ($dr)*100) && (($dr) < 10)

#[Config dr100M_nh1_nf5_nv1_tbf]
#extends = nh1_nf5_nv1_tbf
#result-dir = results/dr100M_nh1_nf5_nv1_tbf
#constraint = (($mr) >= ($n)*2) && (($mr) >= ($dr)*10) && (($mr) <= ($dr)*100) && (($dr) == 0.1)

#[Config nh1_nf0_nv1_tbf]
#extends = nh1_nf0_nv1
#result-dir = results/nh1_nf0_nv1_tbf
#### TBF configurations
## tagged ports toward ODN
#**.olt.mac[0].queueType = "DropTailVLANTBFQueue"  # OLT downstream queue
#**.olt.mac[0].queue.numQueues = 1
#**.olt.mac[0].queue.burstSize = ${bs=3044, 7610, 15220, 30440, 76100, 152200}B	# 2, 5, 10, 20, 50, 100 MTUs (taking into account VLAN tag)
#**.olt.mac[0].queue.meanRate = ${mr=5, 10, 20, 50, 100}Mbps
#**.olt.mac[0].queue.mtu = 1522B	# for Ethernet frame with header(18) + VLAN tag (4) + maximum payload (1500)
#**.olt.mac[0].queue.peakRate = ${dr}Gbps
#constraint = (($mr) >= ($n)*2) && (($mr) >= ($dr)*10) && (($mr) <= ($dr)*100)

#[Config dr100M_nh1_nf0_nv1_tbf]
#extends = nh1_nf0_nv1_tbf
#result-dir = results/dr100M_nh1_nf0_nv1_tbf
#constraint = (($n)*2 <= ($mr)) && (($mr) >= ($dr)*10) && (($mr) <= ($dr)*100) && (($dr) == 0.1)

#[Config dr100M_nh1_nf0_nv1_tbf-test]
#extends = dr100M_nh1_nf0_nv1_tbf
#sim-time-limit = 30min
#warmup-period = 1min
#result-dir = results/test/dr100M_nh1_nf0_nv1_tbf-test

#[Config dr1G_nh1_nf0_nv1_tbf]
#extends = nh1_nf0_nv1_tbf
#result-dir = results/dr1G_nh1_nf0_nv1_tbf
#constraint = (($n)*2 <= ($mr)) && (($mr) >= ($dr)*10) && (($mr) <= ($dr)*100) && (($dr) == 1)

#[Config dr1G_nh1_nf0_nv1_tbf_capped]
#extends = nh1_nf0_nv1_tbf
#result-dir = results/dr1G_nh1_nf0_nv1_tbf_capped
#**.olt.mac[0].queue.peakRate = ${pr=0.1*($dr), 0.2*($dr), 0.3*($dr), 0.4*($dr), 0.5*($dr)} * 1Gbps
#constraint = (($n)*2 <= ($mr)) && (($mr) >= ($dr)*10) && (($mr) <= ($dr)*100) && (($dr) == 1) && (($pr) >= ($mr)*0.001)

#[Config dr1G_nh1_nf0_nv1_tbf_capped-test]
#extends = dr1G_nh1_nf0_nv1_tbf_capped
#repeat = 1
#result-dir = results/test/dr1G_nh1_nf0_nv1_tbf_capped-test
#constraint = (($n)*2 <= ($mr)) && (($mr) == 10) && (($dr) == 1) && (($pr) >= ($mr)*0.001) && (($bs) == 3044)

#[Config nh1_nf0_nv0_tbf]
#extends = nh1_nf0_nv0
#result-dir = results/nh1_nf0_nv0_tbf
#### TBF configurations
## tagged ports toward ODN
#**.olt.mac[0].queueType = "DropTailVLANTBFQueue"  # OLT downstream queue
#**.olt.mac[0].queue.numQueues = 1
#**.olt.mac[0].queue.burstSize = ${bs=15220, 30440, 76100, 152200}B	# 10, 20, 50, 100 MTUs (taking into account VLAN tag)
#**.olt.mac[0].queue.meanRate = ${mr=1, 2, 5, 10}Mbps
#**.olt.mac[0].queue.mtu = 1522B	# for Ethernet frame with header(18) + VLAN tag (4) + maximum payload (1500)
#**.olt.mac[0].queue.peakRate = ${dr}Gbps

#[Config nh1_nf0_nv0_tbf-test]
#extends = nh1_nf0_nv0_tbf
#result-dir = results/test/nh1_nf0_nv0_tbf-test
