#
# Copyright (C) 2012 Kyeong Soo (Joseph) Kim. All rights reserved.
#
# This ini file provides architecture-specific configurations for an
# abstract model of shared access architectures -- like TDM-PONs or
# DOCSIS cable Internet access -- for the comparison study of
# next-generation network (NGN) access architectures.
#
# Note that [General] section, i.e., configurations common to all
# architectures including those of traffic models, is provided by
# "General.ini".
#

[General]
### [General] section providing configurations common to all network
### architectures
include General.ini


########################################################################
### Command environment
########################################################################
#cmdenv-express-mode = true
#cmdenv-performance-display = true	# for monitoring
#cmdenv-status-frequency = 2min	# default is 2s

########################################################################
# Network/system settings
########################################################################

########################################################################
### NIC (of ONUs, OLT)
########################################################################

########################################################################
### Architecture-Specific Settings
########################################################################
[Config SharedBase]
network = inet.examples.ngoa.traffic_control.NgnAccess
result-dir = results/Shared
#*.N = ${N=16,32,64}	# number of ONUs
**.olt.ethg$o[*].channel.throughput.result-recording-modes = all	# for throughput measurement
**.httpApp[*].*.result-recording-modes = all
*.distribution_rate = ${dr=0.1, 1, 10}Gbps	# rate of distribution fiber
*.backbone_rate = ${br=100}Gbps	# rate of backbone link
#*.backbone_delay = ${bd=4.7}ms  # delay in backbone network (total RTT = 10 ms)
### TBF configurations
**.olt.mac[0].queueType = "DropTailVLANTBFQueue"  # OLT downstream queue
#**.olt.mac[0].queue.numQueues = ${N}	# set to number of ONUs
**.olt.mac[0].queue.burstSize = ${bs=15220, 30440, 76100, 152200}B	# 10, 20, 50, 100 MTUs (taking into account VLAN tag)
**.olt.mac[0].queue.meanRate = ${mr=1, 2, 5, 10}Mbps
**.olt.mac[0].queue.mtu = 1522B	# for Ethernet frame with header(18) + VLAN tag (4) + maximum payload (1500)
**.olt.mac[0].queue.peakRate = ${dr}Gbps

########################################################################
### With traffic shaping
########################################################################
[Config N16_n1_nh1_nf0_nv0_tbf]
#sim-time-limit = 2h
#warmup-period = 0.2h
extends = SharedBase
result-dir = results/Shared/nh1_nf0_nv0_tbf
*.N = ${N=16}	# number of ONUs
### TBF configurations
**.olt.mac[0].queue.numQueues = ${N}	# set to number of ONUs
### VLAN configurations
## OLT
# tagged ports toward ODN
**.olt.tagger[0].tagged = true
**.olt.tagger[0].vidSet = "10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25"
# untagged ports toward SNI
**.olt.tagger[1].tagged = false
**.olt.tagger[1].dynamicTagging = true
**.olt.tagger[1].vidSet = "10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25"
## ONU
# untagged ports toward UNIs
**.onu[*].tagger[0].tagged = false
**.onu[0].tagger[0].vidSet = "10"
**.onu[1].tagger[0].vidSet = "11"
**.onu[2].tagger[0].vidSet = "12"
**.onu[3].tagger[0].vidSet = "13"
**.onu[4].tagger[0].vidSet = "14"
**.onu[5].tagger[0].vidSet = "15"
**.onu[6].tagger[0].vidSet = "16"
**.onu[7].tagger[0].vidSet = "17"
**.onu[8].tagger[0].vidSet = "18"
**.onu[9].tagger[0].vidSet = "19"
**.onu[10].tagger[0].vidSet = "20"
**.onu[11].tagger[0].vidSet = "21"
**.onu[12].tagger[0].vidSet = "22"
**.onu[13].tagger[0].vidSet = "23"
**.onu[14].tagger[0].vidSet = "24"
**.onu[15].tagger[0].vidSet = "25"
# tagged ports toward ODN
#**.onu[*].tagger[n].tagged = true
#**.onu[*].tagger[n].vidSet = string(n)
**.onu[*].tagger[1].tagged = true
**.onu[0].tagger[1].vidSet = "10"
**.onu[1].tagger[1].vidSet = "11"
**.onu[2].tagger[1].vidSet = "12"
**.onu[3].tagger[1].vidSet = "13"
**.onu[4].tagger[1].vidSet = "14"
**.onu[5].tagger[1].vidSet = "15"
**.onu[6].tagger[1].vidSet = "16"
**.onu[7].tagger[1].vidSet = "17"
**.onu[8].tagger[1].vidSet = "18"
**.onu[9].tagger[1].vidSet = "19"
**.onu[10].tagger[1].vidSet = "20"
**.onu[11].tagger[1].vidSet = "21"
**.onu[12].tagger[1].vidSet = "22"
**.onu[13].tagger[1].vidSet = "23"
**.onu[14].tagger[1].vidSet = "24"
**.onu[15].tagger[1].vidSet = "25"
### accessSwitch
**.accessSwitch.tagger[*].tagged = true
**.accessSwitch.tagger[0].vidSet = "10"
**.accessSwitch.tagger[1].vidSet = "11"
**.accessSwitch.tagger[2].vidSet = "12"
**.accessSwitch.tagger[3].vidSet = "13"
**.accessSwitch.tagger[4].vidSet = "14"
**.accessSwitch.tagger[5].vidSet = "15"
**.accessSwitch.tagger[6].vidSet = "16"
**.accessSwitch.tagger[7].vidSet = "17"
**.accessSwitch.tagger[8].vidSet = "18"
**.accessSwitch.tagger[9].vidSet = "19"
**.accessSwitch.tagger[10].vidSet = "20"
**.accessSwitch.tagger[11].vidSet = "21"
**.accessSwitch.tagger[12].vidSet = "22"
**.accessSwitch.tagger[13].vidSet = "23"
**.accessSwitch.tagger[14].vidSet = "24"
**.accessSwitch.tagger[15].vidSet = "25"
**.accessSwitch.tagger[16].vidSet = "10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25"

#[Config nh1_nf0_nv0_tbf-test]
#extends = nh1_nf0_nv0_tbf
#result-dir = results/Dedicated/test/nh1_nf0_nv0_tbf-test
#**.olt.mac[0].queueType = "DropTailVLANTBFQueue"  # OLT downstream queue
#**.olt.mac[0].queue.numQueues = ${N}	# set to number of ONUs